apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-app-api.fullname" . }}-deployment
  labels:
    {{- include "flask-app-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: flask-app
      release: {{ .Release.Name }}
      {{- include "flask-app-api.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: {{.Values.flaskapp.pod.name}}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: flask-app
        release: {{ .Release.Name }}
        {{- include "flask-app-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "flask-app-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.flaskapp.image.repository }}
          imagePullPolicy: {{ .Values.flaskapp.image.pullPolicy }}
          ports:
            - name: wsgi
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 3
            httpGet:
              path: /
              port: wsgi
          readinessProbe:
            periodSeconds: 6
            initialDelaySeconds: 15
            timeoutSeconds: 3
            httpGet:
              path: /ready
              port: wsgi
          resources:
            {{- toYaml .Values.flaskapp.resources | nindent 12 }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          volumeMounts:
            - name: downward
              mountPath: /etc/downward
              readOnly: false
            - name: config
              mountPath: /tmp/conf.d
              readOnly: true
        - image: {{ .Values.nginx.image.repository}}
          name: {{ .Values.nginx.image.name }}
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          resources:
            {{- toYaml .Values.flaskapp.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: config
              readOnly: true
      volumes:
      - name: downward
        downwardAPI:
          items:
          - path: "podName"
            fieldRef:
              fieldPath: metadata.name
          - path: "podNamespace"
            fieldRef:
              fieldPath: metadata.namespace
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
          - path: "annotations"
            fieldRef:
              fieldPath: metadata.annotations
          - path: "containerCpuRequestMilliCores"
            resourceFieldRef:
              # Container name must be specified when exposing container level metadata such as resource limit or requests like this using resourceFieldRef.
              containerName: flask-app-api
              resource: requests.cpu
              divisor: 1m
          - path: "containerMemoryLimitBytes"
            resourceFieldRef:
              containerName: flask-app-api
              resource: limits.memory
              divisor: "1"
      - name: config
        configMap:
          name: {{ template "flask-app-api.fullname" . }}-https-cm
